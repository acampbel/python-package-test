name: Publish Python 🐍 distributions 📦 to TestPyPI

on: push

#on:
#  push:
#    # Pattern matched against refs/tags
#    tags:
#      - '*'           # Push events to every tag

jobs:
  build-n-publish:
    name: Build and publish Python 🐍 distributions 📦 to PyPI and TestPyPI
    runs-on: ubuntu-latest

    steps:
    - name: Checkout current repo
      uses: actions/checkout@master

    - name: Checkout ACA repo for matlab cross-check testing
      uses: actions/checkout@master
      with:
        repository: alexanderlerch/ACA-Code
        path: ./ACA

    - name: Show Working directory
      run: |
        pwd
        ls

    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6

#    - name: List python packages
#      run: pip list

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Print Working directory
      run: pwd

    - name: Install MATLAB
      uses: matlab-actions/setup-matlab@v0
      with:
        release: R2020a

    - name: Run script
      uses: matlab-actions/run-command@v0
      with:
        command: ACA/ComputeFeature

#    - name: Install Matlab Engine
#      run: |
#        python --version
#        cd /usr/local/MATLAB/R2020a/extern/engines/python
#        python setup.py build --build-base=$(mktemp -d) install
#
##        python setup.py build --build-base="/home/runner/work/python-package-test/matlab-engine-build" install --prefix="/home/runner/work/python-package-test/matlab-engine-install"
##        ls /home/runner/work/python-package-test/matlab-engine-install/lib
##        echo "PYTHONPATH=/home/runner/work/python-package-test/matlab-engine-install/lib/python3.6/site-packages/" >> $GITHUB_ENV
#
#    - name: Show Matlab directory
#      run: |
#        echo "/usr/local/MATLAB/R2020a/bin" >> $GITHUB_PATH
#        echo $PATH
#        ls /usr/local/MATLAB/R2020a
##        cat /usr/local/MATLAB/R2020a/license_agreement.txt
#
#    - name: Run unit tests
#      run: |
#        echo $PYTHONPATH
#        echo $PATH
#        python -m unittest tests/test_sometest.py

#    - name: Install pypa/build
#      run: >-
#        python -m
#        pip install
#        build
#        --user
#    - name: Build a binary wheel and a source tarball
#      run: >-
#        python -m
#        build
#        --sdist
#        --wheel
#        --outdir dist/
#        .
#    - name: Publish distribution 📦 to Test PyPI
#      if: startsWith(github.ref, 'refs/tags')
#      uses: pypa/gh-action-pypi-publish@master
#      with:
#        password: ${{ secrets.test_pypi_password }}
#        repository_url: https://test.pypi.org/legacy/
#
#    - name: Create Release
#      if: startsWith(github.ref, 'refs/tags')
#      uses: ncipollo/release-action@v1
#      with:
#        token: ${{ secrets.GITHUB_TOKEN }}
